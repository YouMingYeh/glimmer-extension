(function(){"use strict";function F(s){return typeof s=="function"?{main:s}:s}var _=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function I(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var R={exports:{}};(function(s,i){(function(b,w){w(s)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:_,function(b){var w,p;if(!((p=(w=globalThis.chrome)==null?void 0:w.runtime)!=null&&p.id))throw new Error("This script should only be loaded in a browser extension.");if(typeof globalThis.browser>"u"||Object.getPrototypeOf(globalThis.browser)!==Object.prototype){const T="The message port closed before a response was received.",f=x=>{const E={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(E).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class N extends WeakMap{constructor(r,g=void 0){super(g),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}const U=e=>e&&typeof e=="object"&&typeof e.then=="function",O=(e,r)=>(...g)=>{x.runtime.lastError?e.reject(new Error(x.runtime.lastError.message)):r.singleCallbackArg||g.length<=1&&r.singleCallbackArg!==!1?e.resolve(g[0]):e.resolve(g)},P=e=>e==1?"argument":"arguments",Z=(e,r)=>function(t,...o){if(o.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${P(r.minArgs)} for ${e}(), got ${o.length}`);if(o.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${P(r.maxArgs)} for ${e}(), got ${o.length}`);return new Promise((m,A)=>{if(r.fallbackToNoCallback)try{t[e](...o,O({resolve:m,reject:A},r))}catch(n){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,n),t[e](...o),r.fallbackToNoCallback=!1,r.noCallback=!0,m()}else r.noCallback?(t[e](...o),m()):t[e](...o,O({resolve:m,reject:A},r))})},$=(e,r,g)=>new Proxy(r,{apply(t,o,m){return g.call(o,e,...m)}});let v=Function.call.bind(Object.prototype.hasOwnProperty);const C=(e,r={},g={})=>{let t=Object.create(null),o={has(A,n){return n in e||n in t},get(A,n,c){if(n in t)return t[n];if(!(n in e))return;let a=e[n];if(typeof a=="function")if(typeof r[n]=="function")a=$(e,e[n],r[n]);else if(v(g,n)){let h=Z(n,g[n]);a=$(e,e[n],h)}else a=a.bind(e);else if(typeof a=="object"&&a!==null&&(v(r,n)||v(g,n)))a=C(a,r[n],g[n]);else if(v(g,"*"))a=C(a,r[n],g["*"]);else return Object.defineProperty(t,n,{configurable:!0,enumerable:!0,get(){return e[n]},set(h){e[n]=h}}),a;return t[n]=a,a},set(A,n,c,a){return n in t?t[n]=c:e[n]=c,!0},defineProperty(A,n,c){return Reflect.defineProperty(t,n,c)},deleteProperty(A,n){return Reflect.deleteProperty(t,n)}},m=Object.create(e);return new Proxy(m,o)},S=e=>({addListener(r,g,...t){r.addListener(e.get(g),...t)},hasListener(r,g){return r.hasListener(e.get(g))},removeListener(r,g){r.removeListener(e.get(g))}}),z=new N(e=>typeof e!="function"?e:function(g){const t=C(g,{},{getContent:{minArgs:0,maxArgs:0}});e(t)}),j=new N(e=>typeof e!="function"?e:function(g,t,o){let m=!1,A,n=new Promise(k=>{A=function(d){m=!0,k(d)}}),c;try{c=e(g,t,A)}catch(k){c=Promise.reject(k)}const a=c!==!0&&U(c);if(c!==!0&&!a&&!m)return!1;const h=k=>{k.then(d=>{o(d)},d=>{let M;d&&(d instanceof Error||typeof d.message=="string")?M=d.message:M="An unexpected error occurred",o({__mozWebExtensionPolyfillReject__:!0,message:M})}).catch(d=>{console.error("Failed to send onMessage rejected reply",d)})};return h(a?c:n),!0}),G=({reject:e,resolve:r},g)=>{x.runtime.lastError?x.runtime.lastError.message===T?r():e(new Error(x.runtime.lastError.message)):g&&g.__mozWebExtensionPolyfillReject__?e(new Error(g.message)):r(g)},B=(e,r,g,...t)=>{if(t.length<r.minArgs)throw new Error(`Expected at least ${r.minArgs} ${P(r.minArgs)} for ${e}(), got ${t.length}`);if(t.length>r.maxArgs)throw new Error(`Expected at most ${r.maxArgs} ${P(r.maxArgs)} for ${e}(), got ${t.length}`);return new Promise((o,m)=>{const A=G.bind(null,{resolve:o,reject:m});t.push(A),g.sendMessage(...t)})},H={devtools:{network:{onRequestFinished:S(z)}},runtime:{onMessage:S(j),onMessageExternal:S(j),sendMessage:B.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:B.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},L={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return E.privacy={network:{"*":L},services:{"*":L},websites:{"*":L}},C(x,H,E)};b.exports=f(chrome)}else b.exports=globalThis.browser})})(R);var W=R.exports,l=I(W),u=(s=>(s.clickExtIcon="clickExtIcon",s.changeTheme="changeTheme",s.changeLocale="changeLocale",s.toggleSidePanel="toggleSidePanel",s.closeSidePanel="closeSidePanel",s.connect="connect",s.disconnect="disconnect",s.toggleTooltip="toggleTooltip",s.toggleLocked="toggleLocked",s.changeDirection="changeDirection",s))(u||{});const q=F(()=>{console.log("Hello background!",{id:l.runtime.id}),l.sidePanel.setPanelBehavior({openPanelOnActionClick:!0}).catch(i=>console.error(i));let s=!1;l.action.onClicked.addListener(i=>{console.log("click icon"),console.log(i),l.tabs.sendMessage(i.id,{messageType:u.toggleSidePanel})}),l.runtime.onMessage.addListener(async(i,b,w)=>{var p,T;if(console.log("background:"),console.log(i),i.messageType===u.toggleSidePanel)return console.log("toggleSidePanel"),s?(l.runtime.sendMessage({messageType:u.closeSidePanel}),s=!1,!1):(l.sidePanel.open({tabId:(p=b.tab)==null?void 0:p.id}),s=!0,!0);if(i.messageType===u.clickExtIcon)return l.sidePanel.open({tabId:(T=b.tab)==null?void 0:T.id}),s=!0,!0;if(i.messageType===u.changeTheme||i.messageType===u.changeLocale){let f=await l.tabs.query({active:!0,currentWindow:!0});if(console.log(`tabs:${f.length}`),f)for(const x of f)await l.tabs.sendMessage(x.id,i)}else if(i.messageType===u.connect||i.messageType===u.disconnect){i.messageType===u.connect?s=!0:s=!1;let f=await l.tabs.query({active:!0,currentWindow:!0});if(console.log(`tabs:${f.length}`),f)for(const x of f)await l.tabs.sendMessage(x.id,i)}})});function y(s,...i){}var D={debug:(...s)=>y(console.debug,...s),log:(...s)=>y(console.log,...s),warn:(...s)=>y(console.warn,...s),error:(...s)=>y(console.error,...s)};try{q.main()instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(s){throw D.error("The background crashed on startup!"),s}})();
